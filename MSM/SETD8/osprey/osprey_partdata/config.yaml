# osprey configuration file.
#---------------------------
# usage:
#  osprey worker config.yaml

estimator:
    # The model/estimator to be fit.

    # pick one of these ways to specify
      # path to a file
#    pickle: my-model.pkl
      # importable python class/instances
    entry_point: msmbuilder.decomposition.tICA
    eval: |
        Pipeline([
                ('tica', tICA()),
                ('cluster', MiniBatchKMeans()),
                ('msm', MarkovStateModel(lag_time=150, ergodic_cutoff=0.01, verbose=False))
        ])

    # for eval, a python package containing the estimator definitions
    eval_scope: msmbuilder


strategy:
    # the search section specifies the space of hyperparameters to search over
    # and the strategy for doing so

    # hyperopt's tree of parzen estimators http://hyperopt.github.io/hyperopt/
    # and random search are curently supported.
    name: random  # or gp, hyperopt_tpe
    # params: {}

search_space:
  # the search space is specified by listing the variables you want to
  # optimize over and their bounds for float and int typed variables,
  # or the possible choices for enumeration-typed variables.
  cluster__n_clusters:
    min: 50
    max: 1000
    type: int       # from 10 to 100 (with inclusive endpoints)

  tica__lag_time:
    min: 1
    max: 400
    type: int

  tica__n_components:
    min: 1
    max: 1000
    type: int

  tica__kinetic_mapping:
    choices:
      - True
      - False
    type: enum

  tica__commute_mapping:
    choices:
     - True
     - False
    type: enum

cv: 5  # the order of K-fold cross validation to use

dataset_loader:
  # specification of the dataset on which to train the models.
  name: numpy
  params:
    filenames: ../dist_with_H/X_trajs_part/*.npy

trials:
  # path to a databse in which the results of each hyperparameter fit
  # are stored any SQL database is suppoted, but we recommend using
  # SQLLite, which is simple and stores the results in a file on disk.
  # the string format for connecting to other database is described here:
  # http://docs.sqlalchemy.org/en/rel_0_9/core/engines.html#database-urls
  uri: sqlite:///osprey-trials.db
  # if you want to save n > 1 projects in the same DB file, you can set
  # `project_name` to distringuish them:
  # project_name: name
